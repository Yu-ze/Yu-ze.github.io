{"meta":{"title":"Zeyu's BLOG","subtitle":"zeyu的博客小站","description":"欢迎来到zeyu的技术分享站","author":"Pangzeyu","url":"http://yoursite.com","root":"/"},"pages":[{"title":"关于","date":"2019-08-19T09:05:58.000Z","updated":"2019-09-09T14:55:37.501Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"关于我90后自由大学生，坐标南昌，喜欢读书、篮球、跑步。 关于本站本站始建于2019年8月26日，托管与github，图床托管于腾讯云，主要记录博主的技术积累，生活情感等。 Powered by: Hexo：基础博客框架 Next：基于Hexo的博客主题 LeanCloud：数据云存储与后端支持 来比力：文章评论组件 algolia：搜索组件"},{"title":"相册","date":"2019-08-27T14:11:38.000Z","updated":"2019-09-11T14:39:35.525Z","comments":false,"path":"album/index.html","permalink":"http://yoursite.com/album/index.html","excerpt":"","text":""},{"title":"分类","date":"2019-08-16T16:09:58.000Z","updated":"2019-09-11T14:51:52.642Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"阅读","date":"2019-08-25T04:14:13.000Z","updated":"2019-09-10T12:59:41.295Z","comments":true,"path":"reads/index.html","permalink":"http://yoursite.com/reads/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-08-16T16:05:20.000Z","updated":"2019-08-16T16:06:45.813Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"视频","date":"2019-08-27T14:12:09.000Z","updated":"2019-10-26T14:56:58.703Z","comments":false,"path":"video/index.html","permalink":"http://yoursite.com/video/index.html","excerpt":"","text":"一个测试，想看看能不能上传视频，这个视频是蹲妹的Good_Time。(function(){var player = new DPlayer({\"container\":document.getElementById(\"dplayer0\"),\"video\":{\"url\":\"https://blog-1258579174.cos.ap-chengdu.myqcloud.com/audio/Owl_City_%26_Carly_Rae_Jepsen_-_Good_Time.mp4\"},\"danmaku\":{\"api\":\"https://api.prprpr.me/dplayer/\"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})() 游戏混剪视频"},{"title":"","date":"2019-08-19T14:00:33.837Z","updated":"2019-08-19T14:00:33.837Z","comments":true,"path":"lib/canvas-nest/README.html","permalink":"http://yoursite.com/lib/canvas-nest/README.html","excerpt":"","text":"canvas-nest.js for NexT Installation If you want to use the CDN instead of clone this repo, please jump to the Step 3. Step 1 &rarr; Go to NexT dir Change dir to NexT directory. There must be layout, source, languages and other directories: 123$ cd themes/next$ lsbower.json _config.yml docs gulpfile.coffee languages layout LICENSE.md package.json README.md scripts source test Step 2 &rarr; Get module Install module to source/lib directory: 1$ git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest Step 3 &rarr; Set it up Enable module in NexT _config.yml file: 1234567canvas_nest: enable: true onmobile: true # display on mobile or not color: '0,0,255' # RGB values, use ',' to separate opacity: 0.5 # the opacity of line: 0~1 zIndex: -1 # z-index property of the background count: 99 # the number of lines And, if you wants to use the CDN, then need to set: 1234vendors: ... canvas_nest: //cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@latest/canvas-nest.min.js canvas_nest_nomobile: //cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@latest/canvas-nest-nomobile.min.js Update 12$ cd themes/next/source/lib/canvas-nest$ git pull"},{"title":"","date":"2019-08-19T14:00:33.838Z","updated":"2019-08-19T14:00:33.838Z","comments":true,"path":"lib/canvas-nest/canvas-nest-nomobile.min.js","permalink":"http://yoursite.com/lib/canvas-nest/canvas-nest-nomobile.min.js","excerpt":"","text":"!function(){ var userAgentInfo = navigator.userAgent; var Agents = [\"iPad\", \"iPhone\", \"Android\", \"SymbianOS\", \"Windows Phone\", \"iPod\", \"webOS\", \"BlackBerry\", \"IEMobile\"]; for (var v = 0; v < Agents.length; v++) { if (userAgentInfo.indexOf(Agents[v]) > 0) { return; } } function o(w,v,i){return w.getAttribute(v)||i}function j(i){return document.getElementsByTagName(i)}function l(){var i=j(\"script\"),w=i.length,v=i[w-1];return{l:w,z:o(v,\"zIndex\",-1),o:o(v,\"opacity\",0.5),c:o(v,\"color\",\"0,0,0\"),n:o(v,\"count\",99)}}function k(){r=u.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,n=u.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}function b(){e.clearRect(0,0,r,n);var w=[f].concat(t);var x,v,A,B,z,y;t.forEach(function(i){i.x+=i.xa,i.y+=i.ya,i.xa*=i.x>r||i.xn||i.y"},{"title":"","date":"2019-08-19T14:00:33.839Z","updated":"2019-08-19T14:00:33.839Z","comments":true,"path":"lib/canvas-nest/canvas-nest.min.js","permalink":"http://yoursite.com/lib/canvas-nest/canvas-nest.min.js","excerpt":"","text":"!function(){function o(w,v,i){return w.getAttribute(v)||i}function j(i){return document.getElementsByTagName(i)}function l(){var i=j(\"script\"),w=i.length,v=i[w-1];return{l:w,z:o(v,\"zIndex\",-1),o:o(v,\"opacity\",0.5),c:o(v,\"color\",\"0,0,0\"),n:o(v,\"count\",99)}}function k(){r=u.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,n=u.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}function b(){e.clearRect(0,0,r,n);var w=[f].concat(t);var x,v,A,B,z,y;t.forEach(function(i){i.x+=i.xa,i.y+=i.ya,i.xa*=i.x>r||i.xn||i.y"},{"title":"","date":"2019-08-24T14:25:31.813Z","updated":"2019-08-24T14:25:31.813Z","comments":true,"path":"lib/reading_progress/README.html","permalink":"http://yoursite.com/lib/reading_progress/README.html","excerpt":"","text":"Reading Progress for NexT Installation If you want to use the CDN instead of clone this repo, please jump to the Step 3. Step 1 &rarr; Go to NexT dir Change dir to NexT directory. There must be layout, source, languages and other directories: 123$ cd themes/next$ lsbower.json _config.yml docs gulpfile.coffee languages layout LICENSE.md package.json README.md scripts source test Step 2 &rarr; Get module Install module to source/lib directory: 1$ git clone https://github.com/theme-next/theme-next-reading-progress source/lib/reading_progress Step 3 &rarr; Set it up Enable module in NexT _config.yml file: 1234reading_progress: enable: true color: \"#37c6c0\" height: 2px And, if you wants to use the CDN, then need to set: 123vendors: ... reading_progress: //cdn.jsdelivr.net/gh/theme-next/theme-next-reading-progress@1/reading_progress.min.js Update 12$ cd themes/next/source/lib/reading_progress$ git pull"},{"title":"","date":"2019-08-24T14:25:31.814Z","updated":"2019-08-24T14:25:31.814Z","comments":true,"path":"lib/reading_progress/package.json","permalink":"http://yoursite.com/lib/reading_progress/package.json","excerpt":"","text":"{\"name\":\"theme-next-reading-progress\",\"version\":\"1.2.0\",\"description\":\"Reading Progress for NexT\",\"main\":\"reading_progress.js\",\"scripts\":{\"uglify\":\"uglifyjs --compress --mangle -o reading_progress.min.js -- reading_progress.js\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/theme-next/theme-next-reading-progress.git\"},\"author\":\"theme-next\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/theme-next/theme-next-reading-progress/issues\"},\"homepage\":\"https://github.com/theme-next/theme-next-reading-progress#readme\",\"dependencies\":{\"uglify-js\":\"^3.3.9\"}}"},{"title":"","date":"2019-08-24T14:25:31.815Z","updated":"2019-08-24T14:25:31.815Z","comments":true,"path":"lib/reading_progress/reading_progress.js","permalink":"http://yoursite.com/lib/reading_progress/reading_progress.js","excerpt":"","text":";(function() { var $bar = $('.reading-progress-bar') if (!$bar.length) return //no progress bar found var supportsPassive = false try { var opts = Object.defineProperty({}, 'passive', { get: function() { supportsPassive = true } }) window.addEventListener('test', $.noop, opts) window.removeEventListener('test', $.noop) } catch (e) {} var $w = $(window) var $d = $(document) $d.ready(function() { window.addEventListener( 'scroll', function() { var wh = $w.height() var dh = $d.height() var st = $w.scrollTop() var percent = (st / (dh - wh)) * 100 percent = percent > 100 ? 100 : percent < 0 ? 0 : percent $bar.css('width', percent + '%') }, supportsPassive ? { passive: true } : false ) }) })()"},{"title":"","date":"2019-08-24T14:25:31.819Z","updated":"2019-08-24T14:25:31.819Z","comments":true,"path":"lib/reading_progress/reading_progress.min.js","permalink":"http://yoursite.com/lib/reading_progress/reading_progress.min.js","excerpt":"","text":"!function(){var e=$(\".reading-progress-bar\");if(e.length){var n=!1;try{var t=Object.defineProperty({},\"passive\",{get:function(){n=!0}});window.addEventListener(\"test\",$.noop,t),window.removeEventListener(\"test\",$.noop)}catch(e){}var i=$(window),o=$(document);o.ready(function(){window.addEventListener(\"scroll\",function(){var n=i.height(),t=o.height(),r=i.scrollTop()/(t-n)*100;r=r>100?100:r"},{"title":"","date":"2019-08-24T14:25:31.823Z","updated":"2019-08-24T14:25:31.823Z","comments":true,"path":"lib/reading_progress/renovate.json","permalink":"http://yoursite.com/lib/reading_progress/renovate.json","excerpt":"","text":"{\"extends\":[\"config:base\"]}"}],"posts":[{"title":"Linux基础操作","slug":"dayone/2020/1/24-linus","date":"2020-01-24T14:00:26.719Z","updated":"2020-01-24T14:01:17.922Z","comments":true,"path":"2020/01/24/dayone/2020/1/24-linus/","link":"","permalink":"http://yoursite.com/2020/01/24/dayone/2020/1/24-linus/","excerpt":"LINUS实战操作关于学习Linus的一些基础知识，为了便于查阅，还是把这些总结发到博客里比好","text":"LINUS实战操作关于学习Linus的一些基础知识，为了便于查阅，还是把这些总结发到博客里比好 1. 第一次启动Linux 终端的使用 图形终端 命令行终端 远程终端(SSH、VNC) / 根目录 /root root用户的家目录 /home/username 普通用户的家目录 /ect 命令目录 /sbin 管理命令目录 /usr/bin /usr/sbin系统预装的其他命令 init 0关机 2. 万能的帮助命令 man 帮助 man是manual的缩写 man也是一条命令，分为9章，可以使用man命令获得man帮助 如# man 7 man 1 章 用户可以从shell运行的命令 2 章 必须由内核完成的功能 3 章 大多数Libc函数，例如 qsort(3) 4 章 /dev目录中的文件 5 章 /etc/passwd等人类可读的文件的格式说明 6 章 games 7 章 文件系统标准描述，网络协议，ASCII和其他字符集，还有你眼前的这份文档以及其他东西 8 章 类似mount(8)等命令，大部分只能由root执行 9 章 这是废弃的章节，原来曾想把一些关于核心的文件放在这里 help 帮助 shell(命令解释器)自带的命令成为内部命令，其他的是外部命令 内部命令使用help帮助 如# help cd 外部命令使用help帮助 如# ls –help info 帮助 比help更详细，作为help命令的协助 使用网络资源（搜索引擎和官方文档） 3. 初识pwd和cd命令 文件查看 一切文件皆文件 pwd 显示当前的目录名称 cd 更改当前的操作目录 cd /path/to/… 绝对路径 cd ./path/to/… 相对路径 cd ../path/to/… 相对路径 cd - 回到刚刚的目录 ls 查看当前目录下的文件 ls [选项，选项…] 参数… 常用参数 -l 长格式显示文件 -a 显示隐藏文件 -r 逆序显示 -t 按时间顺序显示 -R 递归显示 目录文件 目录文件创建与删除 touch 创建文件 mkdir 创建一个空目录和多级目录 rmdir 删除空白目录 rm -r -f 删除目录（可是非空目录），不会任何提示 复制和移动目录 cp 复制文件 cp -r 复制文件和目录 cp -p 保留复制时间 cp -a 保留修改时间，属主 mv 文件和文件夹的移动和重命名 通配符 定义 shell 内建的符号 用途：操作多个相似的（有简单规律）的文件 常用通配符 * 匹配任何字符 ？匹配一个字符串 [xyz]匹配xyz任意一个字符 [a-z]匹配一个范围 [!xyz]或[^xyz] 不匹配 文本内容查看 cat 文本内容显示到终端 head 查看文件开头 tail 查看文件结尾 常用参数 -f 文件内容更新后，显示信息同步更新 wc 统计文件内容信息 4. 打包和压缩 可以打包后的磁带文件进行压缩存储，压缩的命令是gzip和bzip2 经常使用的扩展名是 .tar.gz .tar.bz2 .tgz tar cf 文件目录 要打包的文件目录 打包 tar czf 文件目录 要打包的文件目录 打包和压缩，体积更小 tar cjf 文件目录 另一个文件目录 打包和压缩，速度更快 tar xf 解压的文件 -C 解压的文件的目录 tar zxf/jxf 解压的文件 -C 解压文件的目录 tar打包命令 常用参数 c 打包 x 解包 f 指定操作类型为文件","categories":[{"name":"学习日记","slug":"学习日记","permalink":"http://yoursite.com/categories/学习日记/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}]},{"title":"视频剪辑","slug":"dayone/2019/10/26","date":"2019-10-26T15:02:07.981Z","updated":"2019-10-26T17:13:06.841Z","comments":true,"path":"2019/10/26/dayone/2019/10/26/","link":"","permalink":"http://yoursite.com/2019/10/26/dayone/2019/10/26/","excerpt":"","text":"前言学这个PR总是断断续续的，每次都是学到了调色阶段就没学下去了。只能说每次学习都是三分钟热度了，这次为了做个混剪视频就找个教程接着学了。感觉每次都跟着讲课老师的素材剪辑很无聊，所以这次就试试着自己找素材做了几个混剪视频。一开始不知道自己要做什么，是先找到了素材再开始考虑怎么混剪，这样子挺盲目的，不过最后还是弄了一个GMV混剪出来。视频已经上传到B站了。下面是这几天做视频的一些经验吧 教程贴吧我找资源习惯是先到贴吧看看有没有大佬分享教程的，以前在B站看的混剪标签都是mad、gmv之类的，所以我在贴吧搜了一下啊，发现真的有mad这个贴吧，然后就加进去看了一下。正确的操作姿势应该是先看精品贴，这里的精品贴已经给我们做好贴子分类了，有软件教程、资源共享、静止画系、动画系和活动与比赛，所以学习完这些就可以入门了，这个贴吧对新人还是挺友好的，MAD教程导航这是贴吧的地址 网站在刷帖子的时候找到两个不错的网站：AMV素材站、MAD图书馆，这里是Mad和AMV相关的资源、教程、文章和工具的整合地，最近B站出了一个mad频道，可以在这个频道观看一些大佬的混剪，看一看别人是怎么剪辑的 书籍推荐推荐几本不错的影视剪辑书 【看不见的剪辑】 作者：[美] 鲍比·奥斯廷这里推荐一个不错的插件：豆瓣资源下载大师，如下图所示，在豆瓣查找图书后会在右侧显示出一些网站资源 【眨眼之间】 作者：[美] 沃尔特·默奇非常不错的一本书，适用于剪辑初学者和进阶学习的朋友。 推荐——再没有什么比这更令人着迷了：连着几小时聆听沃尔特谈论生活与电影，欣赏他随手抛撒的无数智慧的小碎片，就像格林童话中的汉塞尔和格蕾特尔在森林小径上留下的面包屑一样——这是迷途中的路标，也是滋润心灵成长的养分。——弗朗西斯•科波拉，《教父》、《现代启示录》、《惊情四百年》导演在我看来剪辑是电影这门艺术形式的核心，本书为深入这一棘手的技艺进行了艰难的跋涉，但表述出来却极其清晰明了。沃尔特•默奇对剪辑的深刻理解让人吃惊，所有真正想了解电影制作过程的读者都应该读一读这本书。——乔治•卢卡斯，《星球大战》、《美国风情画》导演第一次见到默奇时，他趴在KEM剪辑台上睡着了，当时他为剪辑《对话》熬了一个通宵。默奇是我认识的剪辑师中唯一一个真的与胶片同床共枕的人，事实上，他深爱着每一部他参与过的影片。正是在《眨眼之间》这本书中，他透露了私密的经验与细节，字里行间记录了他对剪辑的热情。没法爱上电影的人是无法体会到妙处的。——菲利普•考夫曼，《布拉格之恋》导演 【魅力剪辑：影视剪辑思维与技巧】 作者：周新霞 周新霞这本《魅力剪辑》很好的把握的剪辑的整体与核心以及当代的剪辑技法。尤其是里面提到的跳切部分，正好与聂欣如的书做一个相互补充。提到的影片不算多，这事一个好事，使得我们不用看太多影片就能很好的消化书中知识。书中图片略小了点，不过影响不大。好书，要推荐。 【电影语言的语法】 作者： [乌拉圭] 丹尼艾尔·阿里洪 本书是乌拉圭电影导演丹尼艾尔·阿里洪根据本人创作实践经验编写的电影叙事技巧教程，其专业性、实用性、经典性为全球各影视院校所公认。作者不对电影的拍摄工作做过多理论论述，而是集中从实践经验入手，对制作过程中出现的种种问题加以细致精准的研究探讨，并提出行之有效的解决方案。全书涉及到电影制作中如摄影机位、场面调度、剪辑等关键问题，对两个以上演员对话场面的处理、摄影机位三角形原理的运用、内外反拍等也均有详细论述。全书层次分明，清晰准确，并有近500幅插图贯穿其中，便于读者充分理解和掌握。 如果还想系统学习一下剪辑的话，可以到知乎搜索，就可以得到很多不错的推荐书单。这里再推荐一本聂欣如的《影视剪辑教程》，可以在微信读书免费阅读 实际操作过程由于电脑太渣，所以我用的Adobe全家桶都是CC2015版本的我电，脑装了Pr、Ae、Au、Ps、Ai和Mc，最好这些adobe软件版本保持一致，这样的话软件之间可以保持联动 一开始是想做黑契的混剪，奈何网盘速度太渣，于是转去下载游戏CG了，我一开始下载油管上的视频素材用的是you-get，在cmd命令窗口输入pip3 install you-get安装完即可，然后下载命令是you-get -x 127.0.0.1:1080 https://www.youtube.com/watch?v=yBCbjFM7mzg即可，这个you-get支持下载站点挺多的，具体的可以自己百度一下。这里再介绍一款可视化工具：CR Tubeget，相对于命令窗口，这个更容易上手 这时候有一块容量大的移动硬盘的好处就体现出来了，我把工程文件的暂存盘改到了移动硬盘，在首选项中把临时缓存区也改到了移动硬盘里，不然视频做到一半把C盘撑爆了那就好玩了。 接下来选好音乐，推荐一个不错的音乐下载网站：超高无损音乐，这里下载的音乐一般都是无损音质flac格式的，这种格式不能直接导入，这里我用的是AdobeOgg插件（下载地址） 音乐踩点的话我安装了beatedit（下载地址），beatedit是一个音乐鼓点节拍自动剪辑扩展插件、插件可以自动检测音频文件根据音乐的节拍鼓点生成时间线，然后选择需要剪辑的素材，自动完成剪辑工作，还可自动/手动选择鼓点位置，编辑开始位置。卡点的话最好的标记的前三帧，听说这样卡点效果最佳，要我说个所以然的话我也说不出，反正跟着做就对了 视频素材时间太长的话可以先找到合适的镜头，然后制作子剪辑分好类，然后再依次拖入新建好的序列调整好即可。对了，还有一个插件是雷特字幕，制作字幕时能够极大节省时间并且达到不错的效果 总结感觉我这个视频太简单了，没有加什么特效，就是单纯的剪切拼接视频而已，用的最多的工具就是剃刀工具了。《魅力剪辑》看的无缝衔接倒是用上了，像这类剪辑转场用的比较多的就是交叉溶解、黑场和白场了。相比前两个视频，卡点还行，没有用那种很蠢的翻页转场了。本来是加了歌词字幕，但是字幕看起来太突出了，所以就删掉了。嗯，就这么多了","categories":[{"name":"学习日记","slug":"学习日记","permalink":"http://yoursite.com/categories/学习日记/"}],"tags":[{"name":"PR","slug":"PR","permalink":"http://yoursite.com/tags/PR/"}]},{"title":"搜索技巧","slug":"dayone/2019/10/13","date":"2019-10-13T15:15:02.543Z","updated":"2019-10-26T15:01:29.898Z","comments":true,"path":"2019/10/13/dayone/2019/10/13/","link":"","permalink":"http://yoursite.com/2019/10/13/dayone/2019/10/13/","excerpt":"","text":"01 搜索心法 找什么，准确描述自己想要的搜索目标 哪里找，准确找到垂直搜索渠道，发现更多同类型网站 怎么找，掌握高级搜索指令 02 信息搜索逻辑遇到任何事情，第一件要做是事情都应该是搜索！搜索的关键是解决问题的思路解决问题是将问题拆解，将问法换一个 推荐网站优惠垂直网站：券妈妈大数据垂直网站：大数据导航内容垂直网站：知乎 微信 搜狗各种类型搜索集大成者：虫部落 03 搜索技巧解析 注意：在实际应用中是将多个搜索指令组合使用的搜索指令扩展： 双引号（””）：双引号内的内容必须完整并连续地出现 星号（*）：通配符，一个及以上任意字符都可以 intext（allintext）：在网页内容中搜索目标关键词，allintext后跟的所有关键词都必须出现在网页中 inurl（allinurl）：在网页url地址内搜索目标关键词，allinurl后跟的所有关键词都必须出现在网页url中 小括号()：将关键词包裹在括号内 01 资源搜索心法 谷歌、必应 结合之前教的搜索指令使用搜索引擎 淘宝、闲鱼、云盘精灵等 百度找不全的试试这些付费渠道 知乎 上述两种方法找不到的就在知乎找高人 这里的谷歌、淘宝、知乎只是代指某一类的网站，在网上经常有一些别人已经整理好的书籍、教程等，可以在云盘或者BT种子下载。巧妙借助他人的成功，也是一种思路。 案例分析：如何阅读文献来提高自己的论文质量核心问题：根据二八法则，我们找到的文献中只有20%质量比较高，且对我们有用的。阅读大量无效、低质量文献只是浪费生命，并不会给我们带来学术成果。真正让我们高效产出的，不是我们读文献的数量，而是我们读文献的质量。 核心逻辑 认真读自己导师或者领域大牛的文献，直接从reference里面找到更多相关优质文献 结合搜索指令，使用谷歌学术等专业学术搜索引擎检索到的学术论文的参考文献中，关联性最高，出现频次最多的文献 必要时也可使用专业的电子文献数据库和学术资源网站的高级检索功能进行搜索，例如：知网、万方、中国社会科学网子网网站集群、国家哲学社会科学学术期刊数据库等等 工具的使用找到适合自己最好的即可，不要找太多相似、同质而略有同的工具。坚持用好一款软件的核心功能，深入的使用，收获必然很大。 02 资源搜索逻辑03 资源搜索技巧自言自语无论是学习写作还是学习设计，如果不去行动，那肯定不会有成果。有时候想法太多未必是件好事，不如早点行动起来。今天在B站学习了一下朱丹搜索，在知乎试了一下，找到了不少好玩的垂直导航网站，还有在Unsplash找到了许多可以拿来当网页背景的图片","categories":[{"name":"学习日记","slug":"学习日记","permalink":"http://yoursite.com/categories/学习日记/"}],"tags":[{"name":"搜索","slug":"搜索","permalink":"http://yoursite.com/tags/搜索/"}]},{"title":"对于Atom插件安装失败的解决方案","slug":"dayone/2019/10/2019_10_13","date":"2019-10-12T16:22:24.553Z","updated":"2019-10-13T15:25:31.267Z","comments":true,"path":"2019/10/13/dayone/2019/10/2019_10_13/","link":"","permalink":"http://yoursite.com/2019/10/13/dayone/2019/10/2019_10_13/","excerpt":"","text":"对于Atom插件安装失败的解决方案第一种方法是将文件拷贝到packages文件夹中一开始我的想法是将要安装的插件安装包拷贝到packages文件夹中 在桌面找到atom图标后右键打开文件所在位置 找到packages文件夹 将要安装的插件安装包拷贝到上述文件夹即可 注意packages文件夹的安装目录为：【C:\\Users\\xxx.atom\\packages】，一开始搞错文件夹目录了，难怪软件没有打开这个插件 第二种方法是切换回国内的镜像NMP国内镜像 http://npm.hacknodejs.com/ http://registry.npmjs.vitecho.com/ https://registry.npm.taobao.org 这里我使用的是taobao.org镜像在cmd命令行中的命令是npm config set registry https://registry.npm.taobao.org 临时使用镜像命令是npm --registry &quot;http://npm.hacknodejs.com/&quot; install underscore 也可以在C:\\Users\\\\.atom\\.apmrc中添加registry=https://registry.npm.taobao.org/， 第三种方法是添加代理我使用的是ssr来科学上网的，所以添加代理的方式是同第二种方法中.apmrc文件中添加下述字段即可http-proxy=http://127.0.0.1:1080https-proxy=http://127.0.0.1:1080 上面就是我安装atom插件的办法了，还有一种是直接在atom中的install选项中找到packages安装，但是这个办法时灵时不灵的。有几个插件能装成功，但是有一些插件就不能装成功了，这个就要看运气了。","categories":[{"name":"学习日记","slug":"学习日记","permalink":"http://yoursite.com/categories/学习日记/"}],"tags":[{"name":"atom","slug":"atom","permalink":"http://yoursite.com/tags/atom/"}]},{"title":"关于的you-get使用的方法","slug":"PPT/you_get","date":"2019-09-25T14:40:33.125Z","updated":"2019-10-12T16:30:30.173Z","comments":true,"path":"2019/09/25/PPT/you_get/","link":"","permalink":"http://yoursite.com/2019/09/25/PPT/you_get/","excerpt":"","text":"前言用Premiere练习剪辑视频的时候需要下载素材，所以为了从油管上更方便地下载视频，于是我在网上找到了这款软件。you-get相比于其他软件，可以直接用cmd命令下载，能够自由选择视频清晰度，还支持大多数网站的视频下载。 安装在安装you-get之前要先安装一下依赖： python3 FFmpeg 在windows上安装python，可从python的官方网站下载python3对应的安装程序，然后，运行下载的exe安装包即可：","categories":[{"name":"学习日记","slug":"学习日记","permalink":"http://yoursite.com/categories/学习日记/"}],"tags":[{"name":"下载工具","slug":"下载工具","permalink":"http://yoursite.com/tags/下载工具/"}]},{"title":"hexo备份管理","slug":"dayone/backup","date":"2019-09-19T14:34:51.229Z","updated":"2019-09-19T16:07:42.074Z","comments":true,"path":"2019/09/19/dayone/backup/","link":"","permalink":"http://yoursite.com/2019/09/19/dayone/backup/","excerpt":"前言今天逛星球的时候看到一位老兄电脑存的两年数据因为电脑重装系统没有了，全是心血，就这样没了，想死的心都有了。无独有偶，我的一位好友也因为win系统更新丢了许多珍贵的数据，所以为了避免重蹈这两位老兄的覆辙了，我把一些电脑的一些重要文件都备份了。至于这个博客的话，因为是静态网站，这些源码都保存在我电脑里，我怕有一天电脑坏了，没办法备份下来，所以为了预防风险，我在网上查了一下怎么备份hexo博客 我这个人比较懒，能躺着就不愿意坐着，所以我采用了最省事的一个办法：用backup插件管理","text":"前言今天逛星球的时候看到一位老兄电脑存的两年数据因为电脑重装系统没有了，全是心血，就这样没了，想死的心都有了。无独有偶，我的一位好友也因为win系统更新丢了许多珍贵的数据，所以为了避免重蹈这两位老兄的覆辙了，我把一些电脑的一些重要文件都备份了。至于这个博客的话，因为是静态网站，这些源码都保存在我电脑里，我怕有一天电脑坏了，没办法备份下来，所以为了预防风险，我在网上查了一下怎么备份hexo博客 我这个人比较懒，能躺着就不愿意坐着，所以我采用了最省事的一个办法：用backup插件管理 备份博客安装backupgithub上有git-backup的源码，git-backup官网，git-backup的中文说明，看着这个说明安装即可 安装步骤： 在电脑桌面上右键打开git-bash 一般来说，现在的hexo大部分都是3.0版本的了，所以使用npm install hexo-git-backup --save即可 插件更新先使用npm remove hexo-git-backup卸载，然后再用npm install hexo-git-backup --save更新 创建新分支在github上打开存放博客源代码的仓库，找到下图所示的Branch新建一个分支，我直接命名为backup 配置主题文件打开hexo根目录下的_config.yml，注意是站点配置文件，不是主题配置文件在文件后添加 12345backup: type: git repository: github: git@github.com:xxx/xxx.git,branchName gitcafe: git@github.com:xxx/xxx.git,branchName` 如果想把主题也一起备份的话，只需要在_congfig.yml文件中加入theme: next,landscape,xxx即可，我使用的是next主题，所以为了避免备份博客之后重新配置主题，我是选择把主题也一起备份的 123456backup: type: git theme: next,landscape,xxx repository: github: git@github.com:xxx/xxx.git,branchName gitcafe: git@github.com:xxx/xxx.git,branchName 添加ssh-keys我电脑中本来是安装有ssh-keys，但是却是另一个github账号的密钥，所以出现了下面的错误提示 解决办法：删除.ssh文件夹下的密钥文件，在git bush中重新配置密钥 运行：ssh-keygen -t rsa -C &quot;yourname@email.com&quot;，一路回车即可 将.ssh目录下的公钥(也就是id_rsa.pub)文件用记事本打开，复制 登录github，添加new SSH key，title名字可以随便填 最后点击add SSH key即可 备份配置完成之后在git bash运行hexo b就可以备份自己的博客了，以后养成习惯在写完博客的时候hexo d 完之后顺便hexo b备份一下就OK了","categories":[{"name":"学习日记","slug":"学习日记","permalink":"http://yoursite.com/categories/学习日记/"}],"tags":[{"name":"backup","slug":"backup","permalink":"http://yoursite.com/tags/backup/"}]},{"title":"PPT中出现的MathType加载项每次启动显示加载错误","slug":"PPT/ppt中去掉mathtype的方法","date":"2019-09-11T14:55:41.958Z","updated":"2020-01-27T13:06:47.361Z","comments":true,"path":"2019/09/11/PPT/ppt中去掉mathtype的方法/","link":"","permalink":"http://yoursite.com/2019/09/11/PPT/ppt中去掉mathtype的方法/","excerpt":"之前是在word中为了输入数学符号方便，就在网上下载了MathType加载到word里面，用了一段之间感觉还蛮可以，之后做完课设之后发现MathType用的频率也不是很高，而且过了几天后MathType的一些重要功能都要收费才能使用,所以果断删除了 卸载之后发现这个根本删不干净，虽然我的word正常了，但是我的PPT每次打开后都出现了”抱歉，由于某种原因，PowerPoint无法加载：C:\\Program Files\\MathType\\Office Support\\32\\MathType AddIn(powerpoint2016).ppam加载项”，这简直不能忍了，于是谷歌启动","text":"之前是在word中为了输入数学符号方便，就在网上下载了MathType加载到word里面，用了一段之间感觉还蛮可以，之后做完课设之后发现MathType用的频率也不是很高，而且过了几天后MathType的一些重要功能都要收费才能使用,所以果断删除了 卸载之后发现这个根本删不干净，虽然我的word正常了，但是我的PPT每次打开后都出现了”抱歉，由于某种原因，PowerPoint无法加载：C:\\Program Files\\MathType\\Office Support\\32\\MathType AddIn(powerpoint2016).ppam加载项”，这简直不能忍了，于是谷歌启动 网上找到的办法都是到注册表把MathType相关的项删除，然后重启PPT就可以了 win+R调出运行，输入regedit来编辑注册表信息 删除计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Office\\PowerPoint\\Addins注册表下所有与mathtype相关的项 ctrl + F调出查找命令，输入MathType AddIn，删除找到的项就可以了 一开始我是用everything这个软件来找MathType，我把所有找到的文件都删了一遍，结果每次进去还是有这个提示，于是我在网上查了一下才知道，原来这个软件会在电脑自动生成很多的注册表，软件卸载时也会一大堆残留，跟以前卸载CAD2010卸不干净有的一拼了","categories":[{"name":"Office全家桶","slug":"Office全家桶","permalink":"http://yoursite.com/categories/Office全家桶/"}],"tags":[{"name":"MathType","slug":"MathType","permalink":"http://yoursite.com/tags/MathType/"}]},{"title":"excel基本操作","slug":"PPT/excel","date":"2019-09-10T11:26:38.057Z","updated":"2020-01-27T13:07:06.821Z","comments":true,"path":"2019/09/10/PPT/excel/","link":"","permalink":"http://yoursite.com/2019/09/10/PPT/excel/","excerpt":"","text":"学习怎么样用excel和SQL进行数据分析，这些是一些知识点，以便我查缺补漏。 excel基本操作数据录入 选择单元格，直接录入 公式输入栏 F2进入编辑模式 ESC取消正在输入的值 对于输入操作，ctrl + d 复制上方单元格数据 enter 键确认并进入下方单元格 tab 键确认并进入右方单元格 方向键，确认并进入方向键对应表格 单元格操作 shift键选择连续的多行 ctrl键选择不连续的多行 行列转置，选中所有的表格数据，复制-粘贴-选择性粘贴-转置-确认 在单元格内快速填充相同的内容，选中单元格区域，开始-编辑-查找和选择-定位条件，选中~空值，确认，在fx输入要填充的值，然后ctrl + enter便可这个与查找与替换有点类似，选中一个单元格区域，然后用替换也可以达到快速填充相同的内容，在填入数据的时候，要先按住ctrl在回车，这样才能达到全部填充的效果 隔行插入空行，使用辅助列，对辅助列进行重新排序，达到插入空白行的目的 选中要整个单元格区域，然后按照升序或降序进行排序，注意，辅助列要事先做好奇偶排序 查找替换 快捷键ctrl + F查找与替换 通配符 * 代替任意多个字符 通配符 ? 代表一个字符这个与正则表达式有点类似，都是通过这些通配符来匹配多个字符菜鸟教程-正则表达式 数据验证，允许-序列-来源，定义的序列用逗号隔开 复制粘贴 ctrl + c复制 ctrl + v粘贴 选择性粘贴 对于快速选择单元格，ctrl + 方向键, shift + 方向键可以快速选择数据，也可以两者结合使用 表格转表 套用表格格式，一次格式可以永久使用 excel公式功能excel条件格式excel数据透视功能excel基本图表功能","categories":[{"name":"Office全家桶","slug":"Office全家桶","permalink":"http://yoursite.com/categories/Office全家桶/"}],"tags":[{"name":"excel","slug":"excel","permalink":"http://yoursite.com/tags/excel/"}]},{"title":"无声告白","slug":"无声告白","date":"2019-08-27T14:26:00.630Z","updated":"2019-08-27T14:29:49.640Z","comments":true,"path":"2019/08/27/无声告白/","link":"","permalink":"http://yoursite.com/2019/08/27/无声告白/","excerpt":"","text":"前言阅读完无声告白这本书","categories":[{"name":"读书","slug":"读书","permalink":"http://yoursite.com/categories/读书/"}],"tags":[{"name":"读书","slug":"读书","permalink":"http://yoursite.com/tags/读书/"}]},{"title":"重学前端","slug":"重学前端","date":"2019-08-18T09:44:11.152Z","updated":"2020-01-27T13:08:14.901Z","comments":true,"path":"2019/08/18/重学前端/","link":"","permalink":"http://yoursite.com/2019/08/18/重学前端/","excerpt":"","text":"1.1 元素可以省略结束标签 空元素语法的标签：area、base、br、col、command、embed、hr、img、input、keygen、link、meta、param、source、wbr. 可以省略结束标签的元素：colgroup、dt、dd、li、optgroup、option、p、rt、rp、thead、tbody、tfoot、tr、td、th. 可以省略全部标签的元素：html、head、body、tbody. 1.2 标签可以不区分大小写1.3 元素的属性可以省略属性值1.4 属性的属性值可以不适用引号2.1 HTML5保留的常用元素2.1.1 基本元素对于HTML5保留的基本元素主要有： 定义HTML注释 ：这是HTML的根元素 ：用于定义HTML文档的页面头部分 ：用于定义HTML文档的页面标题 ：用于定义HTML的页面主题部分 ：用于引入样式定义 到：定义标题一到标题六 ：定义段落 ：插入一个换行 ：定义水平线 ：定义文档的节 ：与div类似，区别是该定义默认不会换行 从上面看，、、三个元素的效果类似，都可以作为其他内容的”容器”——容纳文本和其他内容。包容能力的大小：div &gt; p &gt; span。 2.1.2 文本格式化元素 ：定义粗体文本 ：定义斜体文本 ：定义强调文本 ：定义粗体文本，与标签的作用和用法相同 ：定义小号字体文本 ：定义上标文本 ：定义下标文本 ：定义文本的显示的方向 2.1.3 语义相关元素 ：用于表示一个缩写 ：用于表示一个地址 ：","categories":[{"name":"前端","slug":"前端","permalink":"http://yoursite.com/categories/前端/"}],"tags":[]},{"title":"PPT基础","slug":"PPT/PPT基础课","date":"2019-08-16T16:09:10.237Z","updated":"2020-01-27T13:06:49.173Z","comments":true,"path":"2019/08/17/PPT/PPT基础课/","link":"","permalink":"http://yoursite.com/2019/08/17/PPT/PPT基础课/","excerpt":"","text":"","categories":[{"name":"Office全家桶","slug":"Office全家桶","permalink":"http://yoursite.com/categories/Office全家桶/"}],"tags":[]},{"title":"总是不知道该写什么","slug":"2019_09_07","date":"2019-08-16T16:08:06.490Z","updated":"2019-10-01T14:06:05.296Z","comments":true,"path":"2019/08/17/2019_09_07/","link":"","permalink":"http://yoursite.com/2019/08/17/2019_09_07/","excerpt":"写作应该怎么写，这个我不知道，别人都说写作是有套路的，于是我尝试从网上搜索，试图找到写作的诀窍。但是，很遗憾，搜索结果出来的都是一堆乱七八糟的广告。于是，我尝试着去学习一下别人是怎么写文章的。看一下别人公众号是怎么写的，别人的博客是怎么做的，怎么样才能吸引别人看我的文章。 总是不知道写什么，我这个博客该怎么做才好。应该写我每天的学习吗？好像这个也不失为一个好办法。该开始搭建博客的时候，本来想写一些关于PPT学习的文章，可是发现我好像也不是很会的样子，然后就想着能不能边学边做。有时候，总是想法太多，行动太少。热情总是三四天就没了，所以我一向是走一步看一步的。这样看来，我的确是很丧了。 在电脑上用印象笔记来记录，这个在手机上也有app，这个印象笔记还算不错。我觉得可以在浏览器剪裁各种网页保存到笔记本上挺适合我的，还有印象笔记现在也支持markdown语法了。对于markdown语法的话，各个平台都有一些特定的语法。有一次我就把印象笔记写markdown的习惯用到我的博客上，结果就是把我的纯文本显示出来，github并没有渲染这部分。","text":"写作应该怎么写，这个我不知道，别人都说写作是有套路的，于是我尝试从网上搜索，试图找到写作的诀窍。但是，很遗憾，搜索结果出来的都是一堆乱七八糟的广告。于是，我尝试着去学习一下别人是怎么写文章的。看一下别人公众号是怎么写的，别人的博客是怎么做的，怎么样才能吸引别人看我的文章。 总是不知道写什么，我这个博客该怎么做才好。应该写我每天的学习吗？好像这个也不失为一个好办法。该开始搭建博客的时候，本来想写一些关于PPT学习的文章，可是发现我好像也不是很会的样子，然后就想着能不能边学边做。有时候，总是想法太多，行动太少。热情总是三四天就没了，所以我一向是走一步看一步的。这样看来，我的确是很丧了。 在电脑上用印象笔记来记录，这个在手机上也有app，这个印象笔记还算不错。我觉得可以在浏览器剪裁各种网页保存到笔记本上挺适合我的，还有印象笔记现在也支持markdown语法了。对于markdown语法的话，各个平台都有一些特定的语法。有一次我就把印象笔记写markdown的习惯用到我的博客上，结果就是把我的纯文本显示出来，github并没有渲染这部分。 我对于我自己大概就是这样分的，我有什么技能，我准备学些什么。然后就按这种分类来做笔记。 写作篇一开始总是不知道要写什么，然后就硬写。有时候硬写也写不出来，因为肚子里没墨水，所以就要多阅读去积累了。微信读书是个不错的选项，每个星期组队抽取无限卡，获得的天数也够用阅读了。这里有个小技巧，就是加几个微信群，里面都是组队抽无限卡的，这样就不用分享到朋友圈了。但是，对于微信读书的使用，我一般是用来看小说的，只是不用在浏览器看广告而已。还有kindle和book也是挺不错的，阅读界面的排版看着挺舒服。 对这个世界有点意见 写作不是为了自嗨，写作是为了创造价值。 写作是为了给别人提供一些价值，就是让别人读了你的文章有所收获，有所思考。不要成为一个对什么都无所谓的人，否则你会觉得什么都不值得写。就是写作要提供价值，可以是技巧方面的，也可以是思考方面的。对于一些司空见惯的社会现象也要有自己的意见。 万事万物皆可写作写作是对输入思考后的输出，从平平淡淡的日子里找出闪光点。","categories":[{"name":"学习日记","slug":"学习日记","permalink":"http://yoursite.com/categories/学习日记/"}],"tags":[{"name":"写作","slug":"写作","permalink":"http://yoursite.com/tags/写作/"}]},{"title":"Markdown写作","slug":"markdown写作","date":"2019-08-16T14:21:14.708Z","updated":"2019-08-30T13:20:23.198Z","comments":true,"path":"2019/08/16/markdown写作/","link":"","permalink":"http://yoursite.com/2019/08/16/markdown写作/","excerpt":"前言好像每个hexo博客都会有一篇介绍markdown写作技巧，那我也mark一下吧。markdown纯文本相对于传统的富文本来说，只需要在写作时依照规则键入特定的标记，便可实现非常多样的排版效果。无需考虑字体行距等排版元素的干扰，我们可以将更多的精力集中于写作本身，况且markdown排版出来的效果十分简洁易读，在这里我也总结一下，方便自己查阅。 这里说明一下，我通过VS code和印象笔记来使用markdown的。","text":"前言好像每个hexo博客都会有一篇介绍markdown写作技巧，那我也mark一下吧。markdown纯文本相对于传统的富文本来说，只需要在写作时依照规则键入特定的标记，便可实现非常多样的排版效果。无需考虑字体行距等排版元素的干扰，我们可以将更多的精力集中于写作本身，况且markdown排版出来的效果十分简洁易读，在这里我也总结一下，方便自己查阅。 这里说明一下，我通过VS code和印象笔记来使用markdown的。 基本语法标题 # 一级标题 ## 二级标题 #### 三级标题 ##### 四级标题 ###### 五级标题 ####### 六级标题 加粗 **我是粗体** 我是粗体 斜体 *我是斜体* 我是斜体 下划线 &lt;u&gt;我是下滑线 我是下滑线 删除线 ~~我是删除线~~ 我是删除线 分隔线 -– 或者*** 引用 &gt;引用内容 引用内容 超链接 [超链接](http://yulog.me/2019/08/16/markdown%E5%86%99%E4%BD%9C/) 超链接 图片链接 ![图片](https://blog-1258579174.cos.ap-chengdu.myqcloud.com/images/markdown.jpg) 列表 无序列表：可以使用*作为标记，也可以使用+或者-作为标记 番茄 马铃薯 圣女果 有序列表：使用数字和 .作为标记 番茄 马铃薯 圣女果 此外，无序列表和有序列表之间可以相互嵌套。 文字标亮 在英文状态下用`文字内容`来包围文字即可 文字标亮 代码块 用```代码块```包围代码 12345678910number = 56guess = int(input('输入一个整数：'))if guess == number: print('恭喜你，答对了')elif guess &lt; number: print('不对哦，这个数比你猜的数更大')else: print('不对哦，这个数比你猜的数更小')print('完毕') 表格单元格和表头： 表头 | 表头 ---- | —- 内容1 | 内容2 内容3 | 内容4 表头 | 表头 ---- | ---- 内容1 | 内容2 内容3 | 内容4对齐： :— 代表左对齐 :–: 代表居中对齐 -–: 代表右对齐 -—：默认左对齐 任务清单通过[x] 和[ ]来生成任务清单 马铃薯 番茄 圣女果 高级语法目录设置之后可以自动根据设置的分级标题来自动生成目录通过[TOC]标记来自动生成目录 TeX公式在markdown中LaTex公式分为行内公式和行间公式两种 行内公式：用一个美元符号$将公式括起来，$…$ 行间公式：用两个美元符号￥将公式括起来，$$…$$ 函数 ${f(x)=a_nx^n+a_{n-1}x^{n-1}+a_{n-2}x^{n-2}}+\\cdots$函数 $${f(x)=a_nx^n+a_{n-1}x^{n-1}+a_{n-2}x^{n-2}}+\\cdots \\tag{1.1}$$ 流程图123456graph TDA[模块A] --&gt;|A1| B(模块B)B --&gt; C&#123;判断条件C&#125;C --&gt;|条件C1| D[模块D]C --&gt;|条件C2| E[模块E]C --&gt;|条件C3| F[模块F] 时序表123sequenceDiagramA-&gt;&gt;B: 是否已收到消息？B--&gt;&gt;A: 已收到消息 甘特图123456789gantttitle 甘特图dateFormat YYYY-MM-DDsection 项目A任务1 :a1, 2018-06-06, 30d任务2 :after a1 , 20dsection 项目B任务3 :2018-06-12 , 12d任务4 : 24d 其他平台特有语法相关链接","categories":[{"name":"写作","slug":"写作","permalink":"http://yoursite.com/categories/写作/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://yoursite.com/tags/markdown/"}]},{"title":"建立博客","slug":"hexo部署","date":"2019-08-15T07:12:59.529Z","updated":"2019-09-11T15:26:32.643Z","comments":true,"path":"2019/08/15/hexo部署/","link":"","permalink":"http://yoursite.com/2019/08/15/hexo部署/","excerpt":"前言刚开始是打算用worldpress建站的，因为这个网上教程比较多。以前也有过类似经历，后来就放弃了，因为从长久来看，我就快要毕业了，没有学生优惠的话，一个月的月租还是负担重了点。建站的话首选阿里云的轻量级服务器，这个里面都部署好了各种建站的配置。而且学生认证后的话只要9.5元一个月，还算比较便宜的，在阿里云官网搜索云翼计划就可以找到相关优惠了。当然，腾讯云也有学生优惠，但我这里用的是github page + Hexo做的博客，那接下来就聊聊这过程吧。 刚开始是要要安装git在电脑上的，我的是windows操作系统。以前尝试过用github page做，但是中间出现了好多错误，就没成功，没想到这次可以部署了。之后要安装Node.js，这个之前我电脑也装过了。所以这次就不用装了，我只在B站上搜的教程，之后再配合官方hexo文档做的。官方文档比较详细，但是自己看视频跟着步骤走更容易一点，也就是结果复现。","text":"前言刚开始是打算用worldpress建站的，因为这个网上教程比较多。以前也有过类似经历，后来就放弃了，因为从长久来看，我就快要毕业了，没有学生优惠的话，一个月的月租还是负担重了点。建站的话首选阿里云的轻量级服务器，这个里面都部署好了各种建站的配置。而且学生认证后的话只要9.5元一个月，还算比较便宜的，在阿里云官网搜索云翼计划就可以找到相关优惠了。当然，腾讯云也有学生优惠，但我这里用的是github page + Hexo做的博客，那接下来就聊聊这过程吧。 刚开始是要要安装git在电脑上的，我的是windows操作系统。以前尝试过用github page做，但是中间出现了好多错误，就没成功，没想到这次可以部署了。之后要安装Node.js，这个之前我电脑也装过了。所以这次就不用装了，我只在B站上搜的教程，之后再配合官方hexo文档做的。官方文档比较详细，但是自己看视频跟着步骤走更容易一点，也就是结果复现。 安装Hexo 等所有的上面两个程序安装完成后就可以用nmp安装Hexo.在任意位置点击鼠标右键，然后打开Git Bash进入git命令操作台，然后输入以下命令 1$ npm install -g hexo-cli 在D盘或其他盘创建一个博客根目录，名字随意。例如我的就是blog 123$ hexo init blog$ cd blog$ npm install 安装完成之后根目录的内容如下 在Git Bash执行命令 12$ hexo g$ hexo s 在浏览器上输入http://localhost:4000就可以看到你的站点了，刚开始使用的是hexo的默认主题landscape github配置 使用github托管hexo 登录到github，新建一个仓库(New repository) 只需要填写Repository name即可，名字格式为你的github用户名.github.io Hexo部署到github上 修改站点配置文件，在hexo有两份主要的配置文件，一份是站点配置，另一份是主题配置,名称都是_config.yml。我这用的是VS code修改 1234deploy: type: git repo: github: git@github.com:chentging/yourname.github.io.git,master 将hexo部署到github上 1$ hexo g -d 执行完毕后再访问测试一下就可以了，访问测试：http://yourname.github.io","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/categories/Hexo/"}],"tags":[]}]}